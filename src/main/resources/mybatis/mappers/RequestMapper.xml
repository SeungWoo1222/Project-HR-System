<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.woosan.hr_system.report.dao.RequestDAO">
<!-- ==================================================생성 SQL문=======================================================-->
    <!-- 요청 생성 -->
    <insert id="createRequest" parameterType="map">
        INSERT INTO report_requests
        (requester_id, writer_id, writer_name, due_date, request_note, request_date)
        VALUES
            (
            #{requesterId},
            #{writerId},
            #{writerName},
            #{dueDate},
            #{requestNote},
            #{requestDate}
            )
    </insert>
<!-- ==================================================생성 SQL문=======================================================-->

<!-- ==================================================조회 SQL문=======================================================-->

    <!-- 내 요청 조회 -->
    <select id="getMyRequests" resultType="com.woosan.hr_system.report.model.Request">
        SELECT
        r.request_id AS requestId,
        r.requester_id AS requesterId,
        r.report_id AS reportId,
        e.name AS writerName,
        r.due_date AS dueDate,
        r.request_date AS requestDate,
        r.request_note AS requestNote
        FROM report_requests r
        JOIN employees e ON r.writer_id = e.employee_id
        WHERE r.requester_id = #{requesterId} AND r.report_id IS NOT null
        ORDER BY r.due_date desc LIMIT 7;
    </select>

    <!-- 요청 세부 조회 -->
    <select id="getRequestById" parameterType="int" resultType="com.woosan.hr_system.report.model.Request">
        SELECT request_id   AS requestId,
               writer_id AS writerId,
               writer_name  AS writerName,
               due_date     AS dueDate,
               request_note AS requestNote,
               request_date AS requestDate,
               requester_id AS requesterId -- 요청 삭제 시 로그인한 id와 requesterId가 일치하는 지(삭제권한) 확인 용
        FROM report_requests
        WHERE request_id = #{requestId}
    </select>

    <!--(STAFF - 나에게 온 최근 5개 요청 조회-->
    <select id="getRecentRequests" resultType="com.woosan.hr_system.report.model.Request">
        SELECT
            r.report_id AS reportId,
            e.name AS requesterName,
            r.due_date AS dueDate,
            r.request_date AS requestDate
        FROM report_requests r
        JOIN employees e ON r.requester_id = e.employee_id
        WHERE r.writer_id = #{writerId}
        ORDER BY r.request_date desc LIMIT 5;
    </select>

    <!-- 검색어에 해당하는 데이터 결과 조회 -->
    <select id="search" parameterType="map" resultType="com.woosan.hr_system.report.model.Request">
        SELECT
        r.request_id AS requestId,
        e.name AS requesterName,
        r.writer_name AS writerName,
        r.due_date AS dueDate,
        r.request_date AS requestDate,
        r.report_id AS reportId,
        r.request_note AS requestNote
        FROM report_requests r
        JOIN employees e ON r.requester_id = e.employee_id
        <where>
            <if test="writerId != null and requesterId != ''"> r.writer_id = #{writerId} </if>
            <if test="keyword != null and keyword != '' and searchType == 1">
                AND (r.request_note LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="keyword != null and keyword != '' and searchType == 2">
                AND (e.name LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="requestStart != null and requestEnd != null">
                AND DATE_FORMAT(r.due_date, '%Y-%m') BETWEEN #{requestStart} AND #{requestEnd}
            </if>
        </where>
        ORDER BY r.request_date DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 검색어에 해당하는 전체 데이터 개수 조회 -->
    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(writer_id) FROM report_requests JOIN employees e ON requester_id = employee_id
        <where>
            writer_id = #{writerId}
            <if test="keyword != null and keyword != '' and searchType == 1">
                AND (
                request_note LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="keyword != null and keyword != '' and searchType == 2">
                AND (
                e.name LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="requestStart != null and requestEnd != null">
                AND DATE_FORMAT(due_date, '%Y-%m') BETWEEN #{requestStart} AND #{requestEnd}
            </if>
        </where>
    </select>

    <!-- 검색어에 해당하는 데이터 결과 조회 -->
    <select id="searchMyRequests" parameterType="map" resultType="com.woosan.hr_system.report.model.Request">
        SELECT
        request_id AS requestId,
        writer_name AS writerName,
        due_date AS dueDate,
        request_date AS requestDate,
        report_id AS reportId,
        request_note AS requestNote
        FROM report_requests
        <where>
            <if test="writerId != null and requesterId != ''"> requester_id = #{requesterId} </if>
            <if test="keyword != null and keyword != '' and searchType == 1">
                AND (request_note LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="keyword != null and keyword != '' and searchType == 2">
                AND (writer_name LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="requestStart != null and requestEnd != null">
                AND DATE_FORMAT(due_date, '%Y-%m') BETWEEN #{requestStart} AND #{requestEnd}
            </if>
        </where>
        ORDER BY request_date DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 검색어에 해당하는 전체 데이터 개수 조회 -->
    <select id="countMyRequests" parameterType="map" resultType="int">
        SELECT COUNT(requester_id) FROM report_requests
        <where>
            requester_id = #{requester_id}
            <if test="keyword != null and keyword != '' and searchType == 1">
                AND (
                request_note LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="keyword != null and keyword != '' and searchType == 2">
                AND (
                writer_name LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="requestStart != null and requestEnd != null">
                AND DATE_FORMAT(due_date, '%Y-%m') BETWEEN #{requestStart} AND #{requestEnd}
            </if>
        </where>
    </select>

    <!-- 보고서 결재처리 -->
    <update id="updateApprovalStatus" parameterType="com.woosan.hr_system.report.model.Report">
        UPDATE reports
        SET status        = #{status},
            reject_reason = #{rejectReason}
        WHERE report_id = #{reportId}
    </update>
<!-- ==================================================조회 SQL문=======================================================-->

<!-- ==================================================수정 SQL문=======================================================-->

    <!-- 요청 수정 -->
    <update id="updateRequest" parameterType="map">
        UPDATE report_requests
        SET
            writer_id = #{writerId},
            writer_name = #{writerName},
            due_date = #{dueDate},
            request_note = #{requestNote},
            modified_date = #{modifiedDate}
        WHERE request_id = #{requestId}
    </update>

    <!--요청에 의한 보고서 생성 후 요청에 reportId 삽입-->
    <update id="updateReportId" parameterType="map">
    UPDATE report_requests
    SET report_id = #{reportId}
    WHERE request_id = #{requestId};
    </update>

<!-- ==================================================수정 SQL문=======================================================-->

<!-- ==================================================삭제 SQL문=======================================================-->

    <!-- 요청 삭제 -->
    <delete id="deleteRequest" parameterType="int">
        DELETE
        FROM report_requests
        WHERE request_id = #{requestId}
    </delete>

    <!--  요청에의한 보고서 삭제 시 reportId 삭제  -->
    <update id="deleteReportId" parameterType="Integer">
        UPDATE report_requests
        SET report_id = NULL
        WHERE report_id = #{reportId}
    </update>

    <!-- 삭제된 요청을 공통 휴지통에 데이터 삽입 -->
    <insert id="insertRequestIntoSharedTrash" parameterType="int">
        INSERT INTO shared_trash
        (original_table, original_id, deleted_date, created_date, deleted_by, content, approver_writer_id,
         approver_writer_name, completion_due_date, linked_report_id, modified_date)
        SELECT
            'report_requests', request_id, NOW(), request_date, requester_id, request_note, writer_id,
            writer_name, due_date, COALESCE(report_id, NULL),modified_date
        FROM report_requests
        WHERE request_id = #{requestId}
    </insert>

<!-- ==================================================삭제 SQL문=======================================================-->
</mapper>
