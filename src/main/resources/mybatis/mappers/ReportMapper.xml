<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.woosan.hr_system.report.dao.ReportDAO">

    <!-- 보고서 생성 -->
    <insert id="createReport" parameterType="list">
        INSERT INTO reports
        (title, content, approver_id, approver_name, complete_date, writer_id, created_date, status)
        VALUES
        <foreach collection="list" item="report" separator=",">
            (
            #{report.title},
            #{report.content},
            #{report.approverId},
            #{report.approverName},
            #{report.completeDate},
            #{report.writerId},
            #{report.createdDate},
            #{report.status}
            )
        </foreach>
    </insert>

    <!-- 모든 보고서 조회 -->
    <select id="getAllReports" parameterType="map" resultType="com.woosan.hr_system.report.model.Report">
        SELECT
        r.report_id AS reportId,
        r.writer_id AS writerId,
        e.name AS employeeName,
        r.title,
        r.content,
        DATE_FORMAT(r.created_date, '%Y-%m-%d') AS formattedCreatedDate,
        r.modified_date AS modifiedDate,
        r.approver_id AS approverId,
        r.status,
        r.reject_reason AS rejectReason
        FROM reports r
        JOIN employees e ON r.writer_id = e.employee_id
        <where>
            <if test="approverId != null">
                r.approver_id = #{approverId}
            </if>
            <if test="startYearMonth != null and endYearMonth != null">
                AND DATE_FORMAT(r.created_date, '%Y-%m') BETWEEN #{startYearMonth} AND #{endYearMonth}
            </if>
        </where>
    </select>

    <!-- 특정 보고서 조회 -->
    <select id="getReportById" parameterType="long" resultType="com.woosan.hr_system.report.model.Report">
        SELECT
            report_id AS reportId,
            writer_id AS writerId,
            title,
            content,
            complete_date AS completeDate,
            created_date AS createdDate,
            modified_date AS modifiedDate,
--             approver_id AS approverId,
            status,
            reject_reason AS rejectReason
        FROM reports
        WHERE report_id = #{reportId}
    </select>

    <!-- 통계 조회 -->
    <select id="getReportStats" parameterType="map" resultType="com.woosan.hr_system.report.model.ReportStat">
        SELECT
            DATE_FORMAT(complete_date, '%Y-%m') AS month,
            COUNT(status) AS total,
            SUM(CASE WHEN status = '승인' THEN 1 ELSE 0 END) AS finished,
            SUM(CASE WHEN status IN ('미처리', '거절') THEN 1 ELSE 0 END) AS unfinished
        FROM reports
        WHERE complete_date BETWEEN #{statisticStart} AND #{statisticEnd}
        GROUP BY month
    </select>

    <!-- 특정 파일 조회 -->
    <select id="getReportFileById" parameterType="long" resultType="com.woosan.hr_system.report.model.FileMetadata">
        SELECT
            file_id AS fileId,
            report_id AS reportId,
            cloud_server_file_url AS cloudServerFileUrl,
            original_file_name AS originalFilename,
            uuid_file_name AS uuidFilename,
            size,
            upload_date AS uploadDate

        FROM report_files
        WHERE file_id = #{fileId}
    </select>

    <!-- 파일 DB 정보 생성 -->
    <insert id="insertFileMetadata" parameterType="com.woosan.hr_system.report.model.FileMetadata">
        INSERT INTO report_files (
            cloud_server_file_url,
            original_file_name,
            uuid_file_name,
            size,
            upload_date
        ) VALUES (
                     #{cloudServerFileUrl},
                     #{originalFilename},
                     #{uuidFilename},
                     #{size},
                     #{uploadDate}
                 )
    </insert>

    <!-- 보고서 수정 -->
    <update id="updateReport" parameterType="com.woosan.hr_system.report.model.Report">
        UPDATE reports
        SET title = #{title}, content = #{content}, approver_id = #{approverId}, complete_date = #{completeDate}, modified_date = #{modifiedDate}
        WHERE report_id = #{reportId}
    </update>



    <!-- 보고서 삭제 -->
    <delete id="deleteReport" parameterType="long">
        DELETE FROM reports WHERE report_id = #{reportId}
    </delete>

    <!-- 파일 삭제 -->
    <delete id="deleteFileMetadataByReportId" parameterType="long">
        DELETE FROM report_files WHERE report_id = #{reportId}
    </delete>


</mapper>
