<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woosan.hr_system.employee.dao.EmployeeDAO">
    <resultMap id="EmployeeResultMap" type="com.woosan.hr_system.employee.model.Employee">
        <id property="employeeId" column="employee_id"/>
        <result property="name" column="name"/>
        <result property="birth" column="birth"/>
        <result property="residentRegistrationNumber" column="resident_registration_number"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="hireDate" column="hire_date"/>
        <result property="status" column="status"/>
        <result property="department" column="department_id" javaType="com.woosan.hr_system.employee.model.Department" typeHandler="com.woosan.hr_system.employee.model.DepartmentTypeHandler"/>
        <result property="position" column="position_id" javaType="com.woosan.hr_system.employee.model.Position" typeHandler="com.woosan.hr_system.employee.model.PositionTypeHandler"/>
        <result property="remainingLeave" column="remaining_leave"/>
        <result property="lastModified" column="last_modified"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="picture" column="picture"/>
        <result property="maritalStatus" column="marital_status"/>
        <result property="numDependents" column="num_dependents"/>
        <result property="numChildren" column="num_children"/>
    </resultMap>

    <resultMap id="EmployeeWithResignationResultMap" type="com.woosan.hr_system.employee.model.Employee">
        <id property="employeeId" column="employee_id"/>
        <result property="name" column="name"/>
        <result property="birth" column="birth"/>
        <result property="residentRegistrationNumber" column="resident_registration_number"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="hireDate" column="hire_date"/>
        <result property="status" column="status"/>
        <result property="department" column="department_id" javaType="com.woosan.hr_system.employee.model.Department" typeHandler="com.woosan.hr_system.employee.model.DepartmentTypeHandler"/>
        <result property="position" column="position_id" javaType="com.woosan.hr_system.employee.model.Position" typeHandler="com.woosan.hr_system.employee.model.PositionTypeHandler"/>
        <result property="remainingLeave" column="remaining_leave"/>
        <result property="lastModified" column="last_modified"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="picture" column="picture"/>
        <result property="maritalStatus" column="marital_status"/>
        <result property="numDependents" column="num_dependents"/>
        <result property="numChildren" column="num_children"/>
        <association property="resignation" javaType="com.woosan.hr_system.resignation.model.Resignation">
            <id property="employeeId" column="employee_id"/>
            <result property="resignationDate" column="resignation_date"/>
            <result property="resignationReason" column="resignation_reason"/>
            <result property="codeNumber" column="code_number"/>
            <result property="specificReason" column="specific_reason"/>
            <result property="processedBy" column="processed_by"/>
            <result property="processedDate" column="processed_date"/>
        </association>
    </resultMap>

    <!-- 모든 사원 정보 조회 -->
    <select id="getAllEmployees" resultMap="EmployeeResultMap">
        SELECT * FROM employees
    </select>

    <!-- id를 이용한 특정 사원 정보 조회 -->
    <select id="getEmployeeById" resultMap="EmployeeResultMap">
        SELECT *
        FROM employees
        WHERE employee_id = #{employeeId}
    </select>

    <!-- id를 이용한 사원 이름 조회 -->
    <select id="getEmployeeName" parameterType="String" resultType="String">
        SELECT employees.name
        FROM employees
        WHERE employee_id = #{employeeId}
    </select>

    <!-- 사원 번호 중복 조회 -->
    <select id="existsById" parameterType="String" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM employees
        WHERE employee_id = #{employeeId}
    </select>

    <!-- 부서를 이용한 특정 사원 정보 조회 -->
    <select id="getEmployeesByDepartment" parameterType="String" resultType="com.woosan.hr_system.employee.model.Employee">
        SELECT
            employee_id AS employeeId,
            name AS name
        FROM employees
        WHERE department_id = #{departmentId}
    </select>

    <!-- 사원 등록 -->
    <insert id="insertEmployee">
        INSERT INTO employees (employee_id, name, birth, resident_registration_number, phone, email, address, detail_address, hire_date, status, department_id, position_id, picture, remaining_leave, last_modified, modified_by, marital_status, num_dependents, num_children)
        VALUES (#{employeeId}, #{name}, #{birth}, #{residentRegistrationNumber}, #{phone}, #{email}, #{address}, #{detailAddress}, #{hireDate}, #{status}, #{department}, #{position}, #{picture}, #{remainingLeave}, #{lastModified}, #{modifiedBy}, #{maritalStatus}, #{numDependents}, #{numChildren})
    </insert>

    <!-- 사원 정보 수정 -->
    <update id="updateEmployee">
        UPDATE employees
        SET name=#{name},
            birth=#{birth},
            resident_registration_number=#{residentRegistrationNumber},
            phone=#{phone},
            email=#{email},
            address=#{address},
            detail_address=#{detailAddress},
            hire_date=#{hireDate},
            status=#{status},
            department_id=#{department},
            position_id=#{position},
            remaining_leave=#{remainingLeave},
            last_modified=#{lastModified},
            modified_by=#{modifiedBy},
            picture=#{picture},
            marital_status=#{maritalStatus},
            num_dependents=#{numDependents},
            num_children=#{numChildren}
        WHERE employee_id=#{employeeId}
    </update>

    <!-- 사원 정보 삭제 -->
    <delete id="deleteEmployee">
        DELETE FROM employees WHERE employee_id=#{employeeId}
    </delete>

    <!-- 올해 입사한 사람의 수 조회 -->
    <select id="countEmployeesByCurrentYear" resultType="int">
        SELECT COUNT(*)
        FROM employees
        WHERE YEAR(hire_date) = YEAR(CURDATE())
    </select>

    <!-- 퇴사 예정인 사원 정보 조회 -->
    <select id="getPreResignationEmployees" resultMap="EmployeeResultMap">
        SELECT *
        FROM employees
        WHERE status IN ('퇴사 예정')
    </select>

    <!-- 퇴사 후 2개월 이내의 사원 정보 조회 -->
    <select id="getResignedEmployees" resultMap="EmployeeWithResignationResultMap">
        SELECT e.*, r.resignation_date, r.resignation_reason, r.code_number, r.specific_reason, r.processed_by, r.processed_date
        FROM employees e
                 LEFT JOIN resignation r ON e.employee_id = r.employee_id
        WHERE e.status = '퇴사'
          AND r.resignation_date >= DATE_SUB(NOW(), INTERVAL 2 MONTH)
    </select>

    <!-- 퇴사 후 12개월이 지난 사원 정보 조회 -->
    <select id="getPreDeletionEmployees" resultMap="EmployeeWithResignationResultMap">
        SELECT e.*, r.resignation_date, r.resignation_reason, r.code_number, r.specific_reason, r.processed_by, r.processed_date
        FROM employees e
                 LEFT JOIN resignation r ON e.employee_id = r.employee_id
        WHERE e.status = '퇴사'
          AND r.resignation_date &lt;= DATE_SUB(NOW(), INTERVAL 12 MONTH)
    </select>

    <!-- 검색어에 해당하는 데이터 결과 조회 -->
    <select id="search" parameterType="map" resultMap="EmployeeResultMap">
        SELECT * FROM employees
        <where>
            <if test="keyword != null and keyword != ''">
                (
                employee_id LIKE CONCAT('%', #{keyword}, '%') OR
                name LIKE CONCAT('%', #{keyword}, '%') OR
                birth LIKE CONCAT('%', #{keyword}, '%') OR
                resident_registration_number LIKE CONCAT('%', #{keyword}, '%') OR
                phone LIKE CONCAT('%', #{keyword}, '%') OR
                email LIKE CONCAT('%', #{keyword}, '%') OR
                address LIKE CONCAT('%', #{keyword}, '%') OR
                detail_address LIKE CONCAT('%', #{keyword}, '%') OR
                hire_date LIKE CONCAT('%', #{keyword}, '%') OR
                status LIKE CONCAT('%', #{keyword}, '%') OR
                department_id LIKE CONCAT('%', #{keyword}, '%') OR
                position_id LIKE CONCAT('%', #{keyword}, '%') OR
                remaining_leave LIKE CONCAT('%', #{keyword}, '%') OR
                last_modified LIKE CONCAT('%', #{keyword}, '%') OR
                modified_by LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        ORDER BY hire_date DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 검색어에 해당하는 전체 데이터 개수 조회 -->
    <select id="count" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM employees
        <where>
            <if test="keyword != null and keyword != ''">
                (
                employee_id LIKE CONCAT('%', #{keyword}, '%') OR
                name LIKE CONCAT('%', #{keyword}, '%') OR
                birth LIKE CONCAT('%', #{keyword}, '%') OR
                resident_registration_number LIKE CONCAT('%', #{keyword}, '%') OR
                phone LIKE CONCAT('%', #{keyword}, '%') OR
                email LIKE CONCAT('%', #{keyword}, '%') OR
                address LIKE CONCAT('%', #{keyword}, '%') OR
                detail_address LIKE CONCAT('%', #{keyword}, '%') OR
                hire_date LIKE CONCAT('%', #{keyword}, '%') OR
                status LIKE CONCAT('%', #{keyword}, '%') OR
                department_id LIKE CONCAT('%', #{keyword}, '%') OR
                position_id LIKE CONCAT('%', #{keyword}, '%') OR
                remaining_leave LIKE CONCAT('%', #{keyword}, '%') OR
                last_modified LIKE CONCAT('%', #{keyword}, '%') OR
                modified_by LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
    </select>

    <!-- 사원 재직 상태 수정 -->
    <update id="updateStatus" parameterType="map">
        UPDATE employees
        SET status = #{status},
            last_modified = #{lastModified},
            modified_by = #{modifiedBy}
        WHERE employee_id = #{employeeId}
    </update>

    <!-- 사원 승진 직급 수정 -->
    <update id="updatePosition" parameterType="map">
        UPDATE employees
        SET position_id = #{positionId}
        WHERE employee_id = #{employeeId}
    </update>
</mapper>
