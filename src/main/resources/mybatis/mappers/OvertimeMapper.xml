<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="overtime">
    <resultMap id="OvertimeResultMap" type="com.woosan.hr_system.attendance.model.Overtime">
        <id property="overtimeId" column="overtime_id" />
        <result property="employeeId" column="employee_id" />
        <result property="date" column="date" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="nightHours" column="night_hours" />
        <result property="totalHours" column="total_hours" />
    </resultMap>

    <resultMap id="OvertimeWithEmployeeResultMap" type="com.woosan.hr_system.attendance.model.Overtime">
        <id property="overtimeId" column="overtime_id" />
        <result property="employeeId" column="employee_id" />
        <result property="date" column="date" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="nightHours" column="night_hours" />
        <result property="totalHours" column="total_hours" />
        <!-- 사원 관련 정보 -->
        <result property="employee.employeeId" column="employee_id" />
        <result property="employee.name" column="name" />
        <result property="employee.department" column="department_id" />
        <result property="employee.position" column="position_id" />
    </resultMap>

    <!-- ID를 이용한 초과근무 조회 -->
    <select id="getOvertimeById" resultMap="OvertimeResultMap">
        SELECT * FROM overtime WHERE overtime_id = #{overtimeId}
    </select>

    <!-- 모든 초과근무 조회 -->
    <select id="getAllOvertimes" resultMap="OvertimeResultMap">
        SELECT * FROM overtime
    </select>

    <!-- 사원의 이번 달 초과근무 조회 -->
    <select id="getThisMonthOvertimes" resultMap="OvertimeResultMap">
        SELECT * FROM overtime
        WHERE employee_id = #{employeeId}
          AND DATE_FORMAT(date, '%Y-%m') = #{yearMonth}
    </select>

    <!-- 사원의 이번 주 초과근무 시간 조회 -->
    <select id="getTotalWeeklyOvertime" resultType="float">
        SELECT COALESCE(SUM(total_hours), 0)
        FROM overtime
        WHERE employee_id = #{employeeId}
          AND WEEK(date, 1) = WEEK(#{date}, 1)
    </select>

    <!-- 사원의 이번 주 야간근무 시간 조회 -->
    <select id="getTotalWeeklyNightOvertime" resultType="float">
        SELECT COALESCE(SUM(night_hours), 0)
        FROM overtime
        WHERE employee_id = #{employeeId}
          AND WEEK(date, 1) = WEEK(#{date}, 1)
    </select>

    <!-- 초과근무 등록 -->
    <insert id="insertOvertime" useGeneratedKeys="true" keyProperty="overtimeId">
        INSERT INTO overtime (employee_id, date, start_time, end_time, night_hours, total_hours)
        VALUES (#{employeeId}, #{date}, #{startTime}, #{endTime}, #{nightHours}, #{totalHours})
    </insert>

    <!-- 초과근무 수정 -->
    <update id="updateOvertime">
        UPDATE overtime
        SET start_time = #{startTime},
            end_time = #{endTime},
            night_hours = #{nightHours},
            total_hours = #{totalHours}
        WHERE overtime_id = #{overtimeId}
    </update>

    <!-- 초과근무 삭제 -->
    <delete id="deleteOvertime">
        DELETE FROM overtime WHERE overtime_id = #{overtimeId}
    </delete>

    <!-- 근태 정보에 초과근무 ID 연결 -->
    <update id="linkOvertimeToAttendance" parameterType="map">
        UPDATE attendance
        SET overtime_id = #{overtimeId}
        WHERE attendance_id = #{attendanceId}
    </update>

    <!-- 초과근무 목록 검색 조회 -->
    <select id="searchOvertime" parameterType="map" resultMap="OvertimeWithEmployeeResultMap">
        SELECT o.*, e.name, e.department_id, e.position_id
        FROM overtime o
        JOIN employees e ON o.employee_id = e.employee_id
        <where>
            <if test="keyword != null and keyword != ''">
                (
                o.overtime_id LIKE CONCAT('%', #{keyword}, '%') OR
                o.employee_id LIKE CONCAT('%', #{keyword}, '%') OR
                o.start_time LIKE CONCAT('%', #{keyword}, '%') OR
                o.end_time LIKE CONCAT('%', #{keyword}, '%') OR
                o.night_hours LIKE CONCAT('%', #{keyword}, '%') OR
                o.total_hours LIKE CONCAT('%', #{keyword}, '%') OR
                e.name LIKE CONCAT('%', #{keyword}, '%') OR
                e.position_id LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="department != null and department != ''">
                AND e.department_id = #{department}
            </if>
            <if test="yearMonth != null">
                AND DATE_FORMAT(o.date, '%Y-%m') = #{yearMonth}
            </if>
        </where>
        ORDER BY o.date DESC, o.start_time ASC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 초과근무 목록 검색값 개수 조회 -->
    <select id="countOvertime" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM overtime o
        JOIN employees e ON o.employee_id = e.employee_id
        <where>
            <if test="keyword != null and keyword != ''">
                (
                o.overtime_id LIKE CONCAT('%', #{keyword}, '%') OR
                o.employee_id LIKE CONCAT('%', #{keyword}, '%') OR
                o.start_time LIKE CONCAT('%', #{keyword}, '%') OR
                o.end_time LIKE CONCAT('%', #{keyword}, '%') OR
                o.night_hours LIKE CONCAT('%', #{keyword}, '%') OR
                o.total_hours LIKE CONCAT('%', #{keyword}, '%') OR
                e.name LIKE CONCAT('%', #{keyword}, '%') OR
                e.position_id LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="department != null and department != ''">
                AND e.department_id = #{department}
            </if>
            <if test="yearMonth != null">
                AND DATE_FORMAT(o.date, '%Y-%m') = #{yearMonth}
            </if>
        </where>
    </select>
</mapper>
