<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woosan.hr_system.salary.dao.SalaryPaymentDAO">
    <resultMap id="SalaryPaymentResultMap" type="com.woosan.hr_system.salary.model.SalaryPayment">
        <id property="paymentId" column="payment_id" />
        <result property="salaryId" column="salary_id" />
        <result property="compensationMonth" column="compensation_month" />
        <result property="paymentDate" column="payment_date" />
        <result property="baseSalary" column="base_salary" />
        <result property="positionAllowance" column="position_allowance" />
        <result property="mealAllowance" column="meal_allowance" />
        <result property="transportAllowance" column="transport_allowance" />
        <result property="personalBonus" column="personal_bonus" />
        <result property="teamBonus" column="team_bonus" />
        <result property="holidayBonus" column="holiday_bonus" />
        <result property="yearEndBonus" column="year_end_bonus" />
        <result property="overtimePay" column="overtime_pay" />
        <result property="incomeTax" column="income_tax" />
        <result property="localIncomeTax" column="local_income_tax" />
        <result property="nationalPension" column="national_pension" />
        <result property="healthInsurance" column="health_insurance" />
        <result property="longTermCareInsurance" column="long_term_care_insurance" />
        <result property="employmentInsurance" column="employment_insurance" />
        <result property="deductions" column="deductions" />
        <result property="grossSalary" column="gross_salary" />
        <result property="netSalary" column="net_salary" />
        <result property="remarks" column="remarks" />
    </resultMap>

    <!-- 지급 ID를 이용한 특정 사원의 급여 지급 내역 조회 -->
    <select id="selectPaymentById" parameterType="int" resultMap="SalaryPaymentResultMap">
        SELECT * FROM salary_payments WHERE payment_id = #{paymentId}
    </select>

    <!-- 급여 ID 리스트를 이용한 특정 사원의 모든 급여 지급 내역 조회 -->
    <select id="selectPaymentsBySalaryIdList" parameterType="list" resultMap="SalaryPaymentResultMap">
        SELECT *
        FROM salary_payments
        WHERE salary_id IN
        <foreach item="salaryId" collection="list" open="(" separator="," close=")">
            #{salaryId}
        </foreach>
    </select>

    <!-- 모든 급여 지급 내역 조회 -->
    <select id="selectAllPayments" resultMap="SalaryPaymentResultMap">
        SELECT * FROM salary_payments
    </select>

    <!-- 해당 달 모든 급여 지급 내역 조회 -->
    <select id="selectPaymentByMonth" parameterType="String" resultType="int">
        SELECT salary_id
        FROM salary_payments
        WHERE compensation_month = #{yearMonthString}
    </select>

    <!-- 해당 달 모든 급여 지급 내역 조회 -->
    <select id="selectPaymentBySalaryAndMonth" resultMap="SalaryPaymentResultMap">
        SELECT *
        FROM salary_payments
        WHERE salary_id IN
        <foreach item="salaryId" collection="salaryIdList" open="(" separator="," close=")">
            #{salaryId}
        </foreach>
        AND compensation_month = #{yearMonth}
    </select>

    <!-- 검색어에 해당하는 데이터 결과 조회 -->
    <select id="searchPayslips" parameterType="map" resultMap="SalaryPaymentResultMap">
        SELECT *
        FROM salary_payments
        <where>
            <if test="keyword != null and keyword != ''">
                (
                payment_id LIKE CONCAT('%', #{keyword}, '%') OR
                salary_id LIKE CONCAT('%', #{keyword}, '%') OR
                compensation_month LIKE CONCAT('%', #{keyword}, '%') OR
                payment_date LIKE CONCAT('%', #{keyword}, '%') OR
                base_salary LIKE CONCAT('%', #{keyword}, '%') OR
                position_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                meal_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                transport_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                personal_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                team_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                holiday_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                year_end_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                overtime_pay LIKE CONCAT('%', #{keyword}, '%') OR
                income_tax LIKE CONCAT('%', #{keyword}, '%') OR
                local_income_tax LIKE CONCAT('%', #{keyword}, '%') OR
                national_pension LIKE CONCAT('%', #{keyword}, '%') OR
                health_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                long_term_care_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                employment_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                deductions LIKE CONCAT('%', #{keyword}, '%') OR
                gross_salary LIKE CONCAT('%', #{keyword}, '%') OR
                net_salary LIKE CONCAT('%', #{keyword}, '%') OR
                remarks LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        ORDER BY payment_date DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 검색어에 해당하는 전체 데이터 개수 조회 -->
    <select id="count" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM salary_payments
        <where>
            <if test="keyword != null and keyword != ''">
                (
                payment_id LIKE CONCAT('%', #{keyword}, '%') OR
                salary_id LIKE CONCAT('%', #{keyword}, '%') OR
                compensation_month LIKE CONCAT('%', #{keyword}, '%') OR
                payment_date LIKE CONCAT('%', #{keyword}, '%') OR
                base_salary LIKE CONCAT('%', #{keyword}, '%') OR
                position_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                meal_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                transport_allowance LIKE CONCAT('%', #{keyword}, '%') OR
                personal_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                team_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                holiday_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                year_end_bonus LIKE CONCAT('%', #{keyword}, '%') OR
                overtime_pay LIKE CONCAT('%', #{keyword}, '%') OR
                income_tax LIKE CONCAT('%', #{keyword}, '%') OR
                local_income_tax LIKE CONCAT('%', #{keyword}, '%') OR
                national_pension LIKE CONCAT('%', #{keyword}, '%') OR
                health_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                long_term_care_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                employment_insurance LIKE CONCAT('%', #{keyword}, '%') OR
                deductions LIKE CONCAT('%', #{keyword}, '%') OR
                gross_salary LIKE CONCAT('%', #{keyword}, '%') OR
                net_salary LIKE CONCAT('%', #{keyword}, '%') OR
                remarks LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
    </select>

    <!-- 급여 지급 내역 등록 -->
    <insert id="insertPayment" parameterType="com.woosan.hr_system.salary.model.SalaryPayment" useGeneratedKeys="true" keyProperty="paymentId">
        INSERT INTO salary_payments (
            salary_id, compensation_month, payment_date, gross_salary, base_salary,
            overtime_pay, position_allowance, meal_allowance, transport_allowance,
            personal_bonus, team_bonus, holiday_bonus, year_end_bonus, income_tax,
            local_income_tax, national_pension, health_insurance, long_term_care_insurance,
            employment_insurance, deductions, net_salary, remarks
        ) VALUES (
                     #{salaryId}, #{compensationMonth}, #{paymentDate}, #{grossSalary}, #{baseSalary},
                     #{overtimePay}, #{positionAllowance}, #{mealAllowance}, #{transportAllowance},
                     #{personalBonus}, #{teamBonus}, #{holidayBonus}, #{yearEndBonus}, #{incomeTax},
                     #{localIncomeTax}, #{nationalPension}, #{healthInsurance}, #{longTermCareInsurance},
                     #{employmentInsurance}, #{deductions}, #{netSalary}, #{remarks}
                 )
    </insert>

    <!-- 급여 지급 리스트 내역 등록 -->
    <insert id="insertPaymentList" parameterType="List" useGeneratedKeys="true" keyProperty="paymentId">
        INSERT INTO salary_payments (
        salary_id, compensation_month, payment_date, gross_salary, base_salary,
        overtime_pay, position_allowance, meal_allowance, transport_allowance,
        personal_bonus, team_bonus, holiday_bonus, year_end_bonus, income_tax,
        local_income_tax, national_pension, health_insurance, long_term_care_insurance,
        employment_insurance, deductions, net_salary, remarks
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.salaryId}, #{item.compensationMonth}, #{item.paymentDate}, #{item.grossSalary}, #{item.baseSalary},
            #{item.overtimePay}, #{item.positionAllowance}, #{item.mealAllowance}, #{item.transportAllowance},
            #{item.personalBonus}, #{item.teamBonus}, #{item.holidayBonus}, #{item.yearEndBonus}, #{item.incomeTax},
            #{item.localIncomeTax}, #{item.nationalPension}, #{item.healthInsurance}, #{item.longTermCareInsurance},
            #{item.employmentInsurance}, #{item.deductions}, #{item.netSalary}, #{item.remarks})
        </foreach>
    </insert>

    <!-- 급여 지급 내용 수정 -->
    <update id="updatePayment" parameterType="com.woosan.hr_system.salary.model.SalaryPayment">
        UPDATE salary_payments SET
                                   salary_id = #{salaryId},
                                   compensation_month = #{compensationMonth},
                                   payment_date = #{paymentDate},
                                   gross_salary = #{grossSalary},
                                   base_salary = #{baseSalary},
                                   overtime_pay = #{overtimePay},
                                   position_allowance = #{positionAllowance},
                                   meal_allowance = #{mealAllowance},
                                   transport_allowance = #{transportAllowance},
                                   personal_bonus = #{personalBonus},
                                   team_bonus = #{teamBonus},
                                   holiday_bonus = #{holidayBonus},
                                   year_end_bonus = #{yearEndBonus},
                                   income_tax = #{incomeTax},
                                   local_income_tax = #{localIncomeTax},
                                   national_pension = #{nationalPension},
                                   health_insurance = #{healthInsurance},
                                   long_term_care_insurance = #{longTermCareInsurance},
                                   employment_insurance = #{employmentInsurance},
                                   deductions = #{deductions},
                                   net_salary = #{netSalary},
                                   remarks = #{remarks}
        WHERE payment_id = #{paymentId}
    </update>

    <!-- 급여 지급 내역 삭제 -->
    <delete id="deletePayment" parameterType="int">
        DELETE FROM salary_payments WHERE payment_id = #{paymentId}
    </delete>

</mapper>
